# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write
  discussions: write

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements-test.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        make coverage
    - name: Report coverage
      uses: orgoro/coverage@v3.2
      with:
          coverageFile: tests/coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
    - name: Generate and push coverage badge if changed
      if: github.ref == 'refs/heads/main'
      run: |
        git fetch origin badges:badges
        git checkout badges
        genbadge coverage -i tests/coverage.xml -o tests/coverage.svg
        if git diff --quiet tests/coverage.svg; then
          echo "No changes to coverage badge."
          exit 0
        else
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add tests/coverage.svg
          git commit -m "Update coverage badge"
          git push origin HEAD:refs/heads/badges
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}